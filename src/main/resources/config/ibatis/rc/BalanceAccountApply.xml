<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="BALANCEACCOUNTAPPLY" >
<typeAlias alias="balanceAccount" type="com.creditease.rc.domain.BalanceAccountApply" />
<typeAlias alias="balanceAccountVo" type="com.creditease.rc.domain.BalanceAccountApplyVo" />
  <resultMap id="balanceAccountApplyMap" class="balanceAccount" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    <result column="BALANCE_ACCOUNT_APPLY_ID" property="balanceAccountApplyId" jdbcType="DECIMAL" />
    <result column="CREDITAPPLICATION_ID" property="creditapplicationId" jdbcType="DECIMAL" />
    <result column="APPLY_NAME" property="applyName" jdbcType="VARCHAR" />
    <result column="APPLY_ID" property="applyId" jdbcType="DECIMAL" />
    <result column="APPLY_TIME" property="applyTime" jdbcType="TIMESTAMP" />
    <result column="SAVE_MONEY_TIME" property="saveMoneyTime" jdbcType="TIMESTAMP" />
    <result column="SAVE_MONEY" property="saveMoney" jdbcType="DECIMAL" />
    <result column="REMIT_MONEY_NAME" property="remitMoneyName" jdbcType="VARCHAR" />
    <result column="CASH_RECEIPTS_REASON" property="cashReceiptsReason" jdbcType="VARCHAR" />
    <result column="EARLY_REPAYMENT" property="earlyRepayment" jdbcType="CHAR" />
    <result column="AUDITOR_ID" property="auditorId" jdbcType="DECIMAL" />
    <result column="AUDITOR_NAME" property="auditorName" jdbcType="VARCHAR" />
    <result column="AUDIT_TIME" property="auditTime" jdbcType="TIMESTAMP" />
    <result column="AUDIT_RESULT" property="auditResult" jdbcType="CHAR" />
    <result column="HISTORY_FLAG" property="historyFlag" jdbcType="CHAR" />
    <result column="BORR_REMARK" property="borrRemark" jdbcType="VARCHAR" />
    <result column="BALANCE_DAY" property="balanceDay" jdbcType="DECIMAL" />
  </resultMap>
  <insert id="insert" parameterClass="balanceAccount" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    <selectKey resultClass="java.lang.Long" keyProperty="balanceAccountApplyId" type="pre">
      select SEQ_BASIC_INFO.NEXTVAL  from dual
    </selectKey>
    insert into RL_BALANCE_ACCOUNT_APPLY (BALANCE_ACCOUNT_APPLY_ID,CREDITAPPLICATION_ID, APPLY_NAME, APPLY_ID, APPLY_TIME,
      SAVE_MONEY_TIME, SAVE_MONEY, REMIT_MONEY_NAME, CASH_RECEIPTS_REASON, EARLY_REPAYMENT,
      AUDITOR_ID, AUDITOR_NAME, AUDIT_TIME, AUDIT_RESULT, HISTORY_FLAG,BORR_REMARK,BALANCE_DAY)
    values (#balanceAccountApplyId:DECIMAL#,#creditapplicationId:DECIMAL#, #applyName:VARCHAR#, #applyId:DECIMAL#,
      #applyTime:TIMESTAMP#, #saveMoneyTime:TIMESTAMP#, #saveMoney:DECIMAL#,
      #remitMoneyName:VARCHAR#, #cashReceiptsReason:VARCHAR#, #earlyRepayment:CHAR#,
      #auditorId:DECIMAL#, #auditorName:VARCHAR#, #auditTime:TIMESTAMP#, #auditResult:CHAR#,
      #historyFlag:CHAR#,#borrRemark:VARCHAR#,#balanceDay:DECIMAL#)
    
  </insert>
 <sql id="accountApplyHistoryList">
		select ba.balance_account_apply_id balanceAccountApplyId,
       ba.creditapplication_id     creditapplicationId,
       ba.apply_name                 applyName,
       ba.apply_id                   applyId,
       ba.apply_time                 applyTime,
       ba.save_money_time            saveMoneyTime,
       ba.save_money                 saveMoney,
       (select t.code_value
		from rl_codetable t
		where t.section = 'ynearyRepayment'
		and t.code_key = ba.early_repayment) as earlyRepaymentShow,
       ba.early_repayment            earlyRepayment,
       (select t.code_value
		from rl_codetable t
		where t.section = 'auditAccountApplyState'
		and t.code_key = ba.audit_Result) as auditResultShow,
       ba.audit_Result				 auditResult,
       ba.remit_money_name           remitMoneyName,
       ba.cash_receipts_reason       cashReceiptsReason,
       ba.auditor_id                 auditorId,
       ba.auditor_name               auditorName,
       ba.history_flag               historyFlag,
       ba.borr_remark				 borrRemark,
       ba.balance_Day				 balanceDay,
       ca.business_number            businessNumber,
       ap.name            			 name,
       ap.credentials_number 		 credentialsNumber
	  from rl_balance_account_apply ba,
	  rl_borrower_service_app ap,
	  rl_credit_application ca,
	  (select v.object_id_identity
          from sid_view v
         where v.class = 'com.creditease.rc.domain.CreditApplication'
           and v.ace_sid  in ($authList$)
         group by v.object_id_identity) v
 		where ba.creditapplication_id = v.object_id_identity
 		and ca.creditapplication_id=ba.creditapplication_id
 		and ca.creditapplication_id=ap.creditapplication_id
        and ap.leader='1'
           <isNotEmpty property="businessNumber" prepend="and">
			ca.business_number = #businessNumber#
		</isNotEmpty>
		<isNotEmpty property="name" prepend="and">
			ap.name = #name#
		</isNotEmpty>
		<isNotEmpty property="loanOfficerName" prepend="and">
			ca.loan_officer_name = #loanOfficerName#
		</isNotEmpty>
		<isNotEmpty property="companyId" prepend="and">
			ca.company_id in ($companyId$)
		</isNotEmpty>
		<isNotEmpty property="auditAccountApplyState" prepend="and">
			ba.audit_Result = #auditAccountApplyState#
		</isNotEmpty>
		order by ba.apply_time desc, ba.balance_account_apply_id desc
	</sql>
	<select id="accountApplyHistoryDateGrid" parameterClass="java.util.HashMap" resultClass="com.creditease.rc.domain.BalanceAccountApplyVo">
		<include refid="accountApplyHistoryList" />
	</select>
	<select id="countAccountApplyHistoryDateGrid" parameterClass="java.util.HashMap" resultClass="int">
		select count(*) from (
		<include refid="accountApplyHistoryList" />
		)
	</select>
	<select id="queryBalanceAccountApplyByPrimaryKey" resultClass="balanceAccountVo" parameterClass="java.lang.Long">
		select ba.balance_account_apply_id balanceAccountApplyId,
       ba.creditapplication_id     creditapplicationId,
       ba.apply_name                 applyName,
       ba.apply_id                   applyId,
       ba.apply_time                 applyTime,
       ba.save_money_time            saveMoneyTime,
       ba.save_money                 saveMoney,
       ba.early_repayment            earlyRepayment,
       ba.remit_money_name           remitMoneyName,
       ba.cash_receipts_reason       cashReceiptsReason,
       ba.auditor_id                 auditorId,
       ba.auditor_name               auditorName,
       ba.audit_result               auditResult,
       ba.history_flag               historyFlag,
       ba.borr_remark				 borrRemark,
       ba.balance_Day				 balanceDay,
       (select t.code_value
		from rl_codetable t
		where t.section = 'ynearyRepayment'
		and t.code_key = ba.early_repayment) as earlyRepaymentShow,
       ba.early_repayment            earlyRepayment
	  from rl_balance_account_apply ba
	  where ba.balance_account_apply_id=#balanceAccountApplyId:DECIMAL#
	</select>
	 <!--查询对账申请-->
    <sql id="sql_selectPrepareCreditApplication">
      select ca.business_number businessNumber,
      ap.credentials_number     credentialsNumber,
      ap.name					name,
      ap.creditapplication_id   creditapplicationId
  	 from rl_credit_application ca,rl_borrower_service_app ap
    where ca.creditapplication_id=ap.creditapplication_id
    and ca.business_number =#businessNumber#
    and ap.leader='1'
    and ca.audit_status='15'
    </sql>
    <select id="selectPrepareCreditApplication" parameterClass="java.util.HashMap" resultClass="com.creditease.rc.domain.BalanceAccountApplyVo">
        <include refid="sql_selectPrepareCreditApplication"/>
    </select>
    <select id="countByselectPrepareCreditApplication" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
        <![CDATA[
	  		select count(*) FROM (
	  		]]>
        <include refid="sql_selectPrepareCreditApplication" />
        <![CDATA[
	  		)
	  		]]>
    </select>
    <!-- 审批对账申请  dynamicUpdate -->
    <update id="dynamicUpdate" parameterClass="balanceAccount">
		update rl_balance_account_apply
		<dynamic prepend="set">
			<isNotNull prepend="," property="creditapplicationId">
				CREDITAPPLICATION_ID = #creditapplicationId:DECIMAL#
      </isNotNull>
			<isNotNull prepend="," property="applyName">
				APPLY_NAME = #applyName:VARCHAR#
      </isNotNull>
			<isNotNull prepend="," property="applyId">
				APPLY_ID = #applyId:DECIMAL#
      </isNotNull>
			<isNotNull prepend="," property="applyTime">
				APPLY_TIME = #applyTime:TIMESTAMP#
			</isNotNull>
			<isNotNull prepend="," property="saveMoneyTime">
				SAVE_MONEY_TIME = #saveMoneyTime:TIMESTAMP#
			</isNotNull>
			<isNotNull prepend="," property="saveMoney">
				SAVE_MONEY = #saveMoney:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="remitMoneyName">
				REMIT_MONEY_NAME = #remitMoneyName:VARCHAR#
      </isNotNull>
			<isNotNull prepend="," property="cashReceiptsReason">
				CASH_RECEIPTS_REASON = #cashReceiptsReason:VARCHAR#
      </isNotNull>
			<isNotNull prepend="," property="earlyRepayment">
				EARLY_REPAYMENT = #earlyRepayment:CHAR#
      </isNotNull>
			<isNotNull prepend="," property="auditorId">
				AUDITOR_ID=#auditorId:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="auditorName">
				AUDITOR_NAME = #auditorName:VARCHAR#
      </isNotNull>
			<isNotNull prepend="," property="auditTime">
				AUDIT_TIME = #auditTime:TIMESTAMP#
      </isNotNull>
			<isNotNull prepend="," property="auditResult">
				AUDIT_RESULT= #auditResult:CHAR#
      </isNotNull>
			<isNotNull prepend="," property="historyFlag">
				HISTORY_FLAG = #historyFlag:CHAR#
      </isNotNull>
			<isNotNull prepend="," property="borrRemark">
				BORR_REMARK = #borrRemark:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="balanceDay">
				BALANCE_DAY = #balanceDay:DECIMAL#
      </isNotNull>
		</dynamic>
		where BALANCE_ACCOUNT_APPLY_ID = #balanceAccountApplyId:DECIMAL#
	</update>
</sqlMap>