package com.creditease.rc.dao.impl;

import java.util.List;

import org.springframework.stereotype.Repository;

import com.creditease.rc.dao.IProtocolMappingDAO;
import com.creditease.rc.domain.ProtocolMapping;
import com.creditease.rc.framework.dao.impl.BaseDao;
import com.creditease.rc.framework.pager.Pagination;
import com.creditease.rc.vo.ProtocolVO;

@Repository
public class ProtocolMappingDAOImpl extends BaseDao implements IProtocolMappingDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_PROTOCOL_MAPPING
     *
     * @abatorgenerated
     */
    public ProtocolMappingDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_PROTOCOL_MAPPING
     *
     * @abatorgenerated
     */
    public void insert(ProtocolMapping record) {
        this.insert("RL_PROTOCOL_MAPPING.abatorgenerated_insert", record);
    }
    public Long insertObject(ProtocolMapping record) {
    	return (Long)this.insertObject("RL_PROTOCOL_MAPPING.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_PROTOCOL_MAPPING
     *
     * @abatorgenerated
     */
    public int updateByPrimaryKey(ProtocolMapping record) {
        int rows = this.update("RL_PROTOCOL_MAPPING.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_PROTOCOL_MAPPING
     *
     * @abatorgenerated
     */
    public int updateByPrimaryKeySelective(ProtocolMapping record) {
        int rows = this.update("RL_PROTOCOL_MAPPING.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_PROTOCOL_MAPPING
     *
     * @abatorgenerated
     */
    public ProtocolMapping selectByPrimaryKey(Long mappingId) {
        ProtocolMapping key = new ProtocolMapping();
        key.setMappingId(mappingId);
        ProtocolMapping record = (ProtocolMapping) this.queryUnique("RL_PROTOCOL_MAPPING.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_PROTOCOL_MAPPING
     *
     * @abatorgenerated
     */
    public int deleteByPrimaryKey(Long mappingId) {
        ProtocolMapping key = new ProtocolMapping();
        key.setMappingId(mappingId);
        int rows = this.delete("RL_PROTOCOL_MAPPING.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }
    
   /**
    * 
    * @author 韩大年  
    * @Description:  分页查询
    * @param operateLogVO
    * @param pagination
    * @return 
    * @version v1.0 
    * 2013-3-18
    */
    public Pagination selectProtocolMappingByPagination(ProtocolVO protocolVO,Pagination pagination) {
		return this.queryForPaginatedList("RL_PROTOCOL_MAPPING.selectProtocolMappingByPagination", "RL_PROTOCOL_MAPPING.selectCountByPagination",
				protocolVO, pagination.getStartResult(), pagination.getPageSize());
	}
    /**
     * 
     * @author 韩大年  
     * @Description:  查询ProtocolMappingList列表
     * @param protocolMapping
     * @return 
     * @version v1.0 
     * 2013-3-25
     */
    public List<ProtocolMapping> selectProtocolMappingListSelective(ProtocolMapping protocolMapping){
    	return (List<ProtocolMapping>) this.queryList("RL_PROTOCOL_MAPPING.selectProtocolMappingListSelective", protocolMapping);
    }

    /**
     * @author 罗红杰  
     * 根据creditapplicationId查询合同编号
     * 
     */
	@Override
	public ProtocolMapping selectProtocolNumber(Long creditapplicationId) {
		return  (ProtocolMapping) this.queryUnique("RL_PROTOCOL_MAPPING.selectProtocolNumber",creditapplicationId);
	}

	@Override
	public String quPrefixNumber(String branchofficeId) {
		return (String) queryUnique("RL_PROTOCOL_PREFIX_MAPPING.quPrefixNumber", branchofficeId);
	}

	@Override
	public int deleteIcp(String creditapplicationId) {
		return delete("RL_PROTOCOL_PREFIX_MAPPING.deleteIcp", creditapplicationId);
	}
    
}