package com.creditease.rc.dao.impl;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Repository;

import com.creditease.rc.dao.ILinkmanInvestigationDAO;
import com.creditease.rc.domain.LinkmanInvestigation;
import com.creditease.rc.framework.dao.IBaseDao;
import com.creditease.rc.framework.dao.impl.BaseDao;
/**
 * 
 * @author haoqiang
 *
 */
@Repository
public class LinkmanInvestigationDAOImpl extends BaseDao implements ILinkmanInvestigationDAO {

	@Resource
	private IBaseDao baseDao;

	public IBaseDao getBaseDao() {
		return baseDao;
	}

	public void setBaseDao(IBaseDao baseDao) {
		this.baseDao = baseDao;
	}

	/**
	 * This method was generated by Abator for iBATIS.
	 * This method corresponds to the database table RL_LINKMAN_INVESTIGATION
	 * 
	 * @abatorgenerated
	 */
	public LinkmanInvestigationDAOImpl() {
		super();
	}

	/**
	 * 
	 * @param record LinkmanInvestigation对象
	 */
	public void insert(LinkmanInvestigation record) {
		baseDao.insert("RL_LINKMAN_INVESTIGATION.abatorgenerated_insert", record);
	}

	/**
	 * 
	 * @param record LinkmanInvestigation对象
	 * @return 更新的条目
	 */
	public int updateByPrimaryKey(LinkmanInvestigation record) {
		int rows = baseDao.update("RL_LINKMAN_INVESTIGATION.abatorgenerated_updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * 
	 * @param record LinkmanInvestigation对象
	 * @return 更新的条目
	 */
	public int updateByPrimaryKeySelective(LinkmanInvestigation record) {
		int rows = baseDao.update("RL_LINKMAN_INVESTIGATION.abatorgenerated_updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * 
	 * @param linkmanInvestigationId 主键
	 * @return LinkmanInvestigation对象
	 */
	public LinkmanInvestigation selectByPrimaryKey(Long linkmanInvestigationId) {
		LinkmanInvestigation key = new LinkmanInvestigation();
		key.setLinkmanInvestigationId(linkmanInvestigationId);
		LinkmanInvestigation record = (LinkmanInvestigation) baseDao.queryUnique(
				"RL_LINKMAN_INVESTIGATION.abatorgenerated_selectByPrimaryKey", key);
		return record;
	}

	/**
	 * 
	 * @param linkmanInvestigationId 主键
	 * @return 删除的条数
	 */
	public int deleteByPrimaryKey(Long linkmanInvestigationId) {
		LinkmanInvestigation key = new LinkmanInvestigation();
		key.setLinkmanInvestigationId(linkmanInvestigationId);
		int rows = baseDao.delete("RL_LINKMAN_INVESTIGATION.abatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	

	@Override
	public boolean deleteBycreditInvestigatioId(Long creditInvestigatioId) {
		// TODO Auto-generated method stub
		baseDao.delete("RL_LINKMAN_INVESTIGATION.deleteBycreditInvestigatioId", creditInvestigatioId);
		return true;
	}

}