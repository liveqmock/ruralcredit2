package com.creditease.rc.dao.impl;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Repository;

import com.creditease.rc.dao.IWebsiteDao;
import com.creditease.rc.domain.Website;
import com.creditease.rc.framework.dao.IBaseDao;
import com.creditease.rc.vo.WebsiteInfoRequestParam;
import com.creditease.rc.vo.WebsiteVo;
@Repository
public class WebsiteDao  implements IWebsiteDao {

	@Resource
	private IBaseDao baseDao;
	
    public WebsiteDao() {
        super();
    }

    /**
     *插入方法
     */
    public Long insert(Website record) {
    	Object newKey=baseDao.insertObject("WEBSITE.batchInsert", record);
        return (Long) newKey;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table WEBSITE
     *
     * @abatorgenerated
     */
    public int updateByPrimaryKey(Website record) {
        int rows = baseDao.update("WEBSITE.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table WEBSITE
     *
     * @abatorgenerated
     */
    public int updateByPrimaryKeySelective(Website record) {
        int rows = baseDao.update("WEBSITE.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table WEBSITE
     *
     * @abatorgenerated
     */
    public Website selectByPrimaryKey(Long websiteId) {
        Website key = new Website();
        key.setWebsiteId(websiteId);
        Website record = (Website) baseDao.queryUnique("WEBSITE.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table WEBSITE
     *
     * @abatorgenerated
     */
    public int deleteByPrimaryKey(Long websiteId) {
        Website key = new Website();
        key.setWebsiteId(websiteId);
        int rows = baseDao.delete("WEBSITE.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

	//批量导入
	@Override
	public void batchInsert(List entityList) {
		baseDao.batchInsert("WEBSITE.batchInsert", entityList);
	}

	@Override
	public List<WebsiteVo> qyWebsiteByMap(WebsiteInfoRequestParam websiteInfoRequestParam) {
		
		return (List<WebsiteVo>) baseDao.queryList("WEBSITE.qyWebsiteByMap", websiteInfoRequestParam);
	}

	@Override
	public Website selectByCompanyId(String companyId) {
		return (Website) baseDao.queryUnique("WEBSITE.selectByCompanyId", companyId);
	}
}