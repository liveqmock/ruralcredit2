package com.creditease.rc.dao.impl;

import java.util.List;

import org.springframework.stereotype.Repository;

import com.creditease.rc.dao.IProtocolPrefixMappingDAO;
import com.creditease.rc.domain.ProtocolPrefixMapping;
import com.creditease.rc.framework.dao.impl.BaseDao;
import com.creditease.rc.framework.pager.Pagination;
@Repository
public class ProtocolPrefixMappingDAOImpl extends BaseDao implements IProtocolPrefixMappingDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_PROTOCOL_PREFIX_MAPPING
     *
     * @abatorgenerated
     */
    public ProtocolPrefixMappingDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_PROTOCOL_PREFIX_MAPPING
     *
     * @abatorgenerated
     */
    public void insert(ProtocolPrefixMapping record) {
        this.insert("RL_PROTOCOL_PREFIX_MAPPING.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_PROTOCOL_PREFIX_MAPPING
     *
     * @abatorgenerated
     */
    public int updateByPrimaryKey(ProtocolPrefixMapping record) {
        int rows = this.update("RL_PROTOCOL_PREFIX_MAPPING.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_PROTOCOL_PREFIX_MAPPING
     *
     * @abatorgenerated
     */
    public int updateByPrimaryKeySelective(ProtocolPrefixMapping record) {
        int rows = this.update("RL_PROTOCOL_PREFIX_MAPPING.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_PROTOCOL_PREFIX_MAPPING
     *
     * @abatorgenerated
     */
    public ProtocolPrefixMapping selectByPrimaryKey(Long prefixId) {
        ProtocolPrefixMapping key = new ProtocolPrefixMapping();
        key.setPrefixId(prefixId);
        ProtocolPrefixMapping record = (ProtocolPrefixMapping) this.queryUnique("RL_PROTOCOL_PREFIX_MAPPING.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_PROTOCOL_PREFIX_MAPPING
     *
     * @abatorgenerated
     */
    public int deleteByPrimaryKey(Long prefixId) {
        ProtocolPrefixMapping key = new ProtocolPrefixMapping();
        key.setPrefixId(prefixId);
        int rows = this.delete("RL_PROTOCOL_PREFIX_MAPPING.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }
    
    /**
     * 
     * @author 韩大年  
     * @Description:  分页查询
     * @param protocolPrefixMapping
     * @param pagination
     * @return 
     * @version v1.0 
     * 2013-3-18
     */
     public Pagination selectProtocolPrefixMappingByPagination(ProtocolPrefixMapping protocolPrefixMapping,Pagination pagination){
    	 return this.queryForPaginatedList("RL_PROTOCOL_PREFIX_MAPPING.selectProtocolPrefixMappingByPagination", "RL_PROTOCOL_PREFIX_MAPPING.selectCountByPagination",
    			 protocolPrefixMapping, pagination.getStartResult(), pagination.getPageSize());
     }
     
     /**
      * 
      * @author 韩大年  
      * @Description:  查询ProtocolPrefixMappingList
      * @param protocolPrefixMapping
      * @return 
      * @version v1.0 
      * 2013-3-25
      */
     public List<ProtocolPrefixMapping> selectProtocolPrefixMappingListSelective(ProtocolPrefixMapping protocolPrefixMapping){
    	 return (List<ProtocolPrefixMapping>) this.queryList("RL_PROTOCOL_PREFIX_MAPPING.selectProtocolPrefixMappingListSelective", protocolPrefixMapping);
    	 
     }

	@Override
	public List<ProtocolPrefixMapping> queryDistrictAndDepartment() {
		// TODO Auto-generated method stub
		return (List<ProtocolPrefixMapping>) queryList("RL_PROTOCOL_PREFIX_MAPPING.queryDistrictAndDepartment");
	}
}