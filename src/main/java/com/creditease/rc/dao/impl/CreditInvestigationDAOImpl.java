package com.creditease.rc.dao.impl;

import javax.annotation.Resource;

import org.springframework.stereotype.Repository;

import com.creditease.rc.dao.ICreditInvestigationDAO;
import com.creditease.rc.domain.CreditInvestigation;
import com.creditease.rc.framework.dao.IBaseDao;
import com.creditease.rc.framework.dao.impl.BaseDao;
import com.creditease.rc.vo.CreditInvestigationVo;
/**
 * 
 * @author haoqiang
 *
 */
@Repository
public class CreditInvestigationDAOImpl extends BaseDao implements ICreditInvestigationDAO {

	@Resource
	private IBaseDao baseDao;

	public IBaseDao getBaseDao() {
		return baseDao;
	}

	public void setBaseDao(IBaseDao baseDao) {
		this.baseDao = baseDao;
	}

	/**
	 * This method was generated by Abator for iBATIS.
	 * This method corresponds to the database table RL_CREDIT_INVESTIGATIO
	 * 
	 * @abatorgenerated
	 */
	public CreditInvestigationDAOImpl() {
		super();
	}

	/**
	 * 
	 * @param record CreditInvestigation对象
	 * @return 主键
	 */
	public Long insert(CreditInvestigation record) {
		return (Long) baseDao.insertObject("RL_CREDIT_INVESTIGATIO.abatorgenerated_insert", record);
	}

	/**
	 * 
	 * @param record CreditInvestigation对象
	 * @return 更新的条数
	 */
	public int updateByPrimaryKey(CreditInvestigation record) {
		int rows = baseDao.update("RL_CREDIT_INVESTIGATIO.abatorgenerated_updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * 
	 * @param record CreditInvestigation对象
	 * @return 更新的条数
	 */
	public int updateByPrimaryKeySelective(CreditInvestigation record) {
		int rows = baseDao.update("RL_CREDIT_INVESTIGATIO.abatorgenerated_updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * 
	 * @param creditInvestigatioId 主键
	 * @return CreditInvestigationVo对象
	 */
	public CreditInvestigationVo selectByPrimaryKey(Long creditInvestigatioId) {
		CreditInvestigation key = new CreditInvestigation();
		key.setCreditInvestigatioId(creditInvestigatioId);
		CreditInvestigationVo record = (CreditInvestigationVo) baseDao.queryUnique(
				"RL_CREDIT_INVESTIGATIO.selectCreditInvestigationVoByPrimaryKey", key);
		return record;
	}

	/**
	 * 
	 * @param creditInvestigatioId 主键
	 * @return 删除的条数
	 */
	public int deleteByPrimaryKey(Long creditInvestigatioId) {
		CreditInvestigation key = new CreditInvestigation();
		key.setCreditInvestigatioId(creditInvestigatioId);
		int rows = baseDao.delete("RL_CREDIT_INVESTIGATIO.abatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	@Override
	public int updateCreditInvestigationName(CreditInvestigation creditInvestigation) {
		int rows = baseDao.update("RL_CREDIT_INVESTIGATIO.updateCreditInvestigationName", creditInvestigation);
		return rows;
	}
}