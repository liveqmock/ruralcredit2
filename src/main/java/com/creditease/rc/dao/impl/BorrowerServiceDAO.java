package com.creditease.rc.dao.impl;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.creditease.rc.domain.CreditCoBorrower;
import com.creditease.rc.domain.CustomerBasicInfo;
import org.springframework.stereotype.Repository;

import com.creditease.rc.dao.IBorrowerServiceDAO;
import com.creditease.rc.domain.BorrowerService;
import com.creditease.rc.framework.dao.IBaseDao;
import com.creditease.rc.framework.dao.impl.BaseDao;
/**
 * 
 * @author zhangman
 *
 */
@Repository
public class BorrowerServiceDAO extends BaseDao implements IBorrowerServiceDAO {

	@Resource
	private IBaseDao baseDao;
    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_BORROWER_SERVICE_APP
     *
     * @abatorgenerated
     */
    public BorrowerServiceDAO() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_BORROWER_SERVICE_APP
     *
     * @abatorgenerated
     */
    public long insert(BorrowerService record) {
       return  (Long) baseDao.insertObject("RL_BORROWER_SERVICE_APP.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_BORROWER_SERVICE_APP
     *
     * @abatorgenerated
     */
    public int updateByPrimaryKey(BorrowerService record) {
        int rows = baseDao.update("RL_BORROWER_SERVICE_APP.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_BORROWER_SERVICE_APP
     *
     * @abatorgenerated
     */
    public int updateByPrimaryKeySelective(BorrowerService record) {
        int rows = baseDao.update("RL_BORROWER_SERVICE_APP.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_BORROWER_SERVICE_APP
     *
     * @abatorgenerated
     */
    public BorrowerService selectByPrimaryKey(Long BorrowerServiceId) {
        BorrowerService key = new BorrowerService();
        key.setBorrowerServiceAppId(BorrowerServiceId);
        BorrowerService record = (BorrowerService) baseDao.queryUnique("RL_BORROWER_SERVICE_APP.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }


    /**
     * 根据业务编号 查询借款人信息
     * @param businessNumber 借款申请编号
     * @return
     */
    @Override
    public BorrowerService queryBorrowerServiceInfoByBussinessNumber(String businessNumber) {
       return (BorrowerService)baseDao.queryUnique("RL_BORROWER_SERVICE_APP.queryBorrowerServiceInfoByBussinessNumber",businessNumber);
    }

    /**
     *  根据业务编号 查询担保人信息
     * @param businessNumber 借款申请编号
     * @return
     */
    @Override
    public List<BorrowerService> queryGuarantyListInfoByBussinessNumber(String businessNumber) {
       return (List<BorrowerService>) baseDao.queryList("RL_BORROWER_SERVICE_APP.queryGuarantyListInfoByBussinessNumber", businessNumber);
    }

    /**
     * 根据业务编号 查询共借人信息
     * @param businessNumber 借款申请编号
     * @return
     */
    @Override
    public CreditCoBorrower queryCreditCoBorrowerInfoByBussinessNumber(String businessNumber) {
        return (CreditCoBorrower)baseDao.queryUnique("RL_BORROWER_SERVICE_APP.queryCreditCoBorrowerInfoByBussinessNumber",businessNumber);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_BORROWER_SERVICE_APP
     *
     * @abatorgenerated
     */
    public int deleteByPrimaryKey(Long BorrowerServiceId) {
        BorrowerService key = new BorrowerService();
        key.setBorrowerServiceAppId(BorrowerServiceId);
        int rows = baseDao.delete("RL_BORROWER_SERVICE_APP.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }
    
    public List<Map> select(BorrowerService borrowerService){
    	return (List<Map>) baseDao.queryList("RL_BORROWER_SERVICE_APP.select", borrowerService);
    }

    /**
     * 是否试点营业部
     * @param depId
     * @return
     */
    @Override
    public boolean isSpecDep(Long depId) {
        List<Integer> list = (List<Integer>)baseDao.queryList("RL_BORROWER_SERVICE_APP.queryIsSpecDepById", depId);
        if(list.get(0).intValue()>0){
            return true;
        }
        return false;
    }

    /**
     *  更新借款人信息
     * @param borrowerService
     */
    @Override
    public void updateBorrowerServiceIdInfo(BorrowerService borrowerService) {
        baseDao.update("RL_BORROWER_SERVICE_APP.updateBorrowerServiceIdInfo", borrowerService);
    }

    /**
     *
     更新担保人信息
     * @param borrowerServices
     */
    @Override
    public void updateGuarantyBorrowerServiceIdInfo(List<BorrowerService> borrowerServices) {
      baseDao.batchUpdate("RL_BORROWER_SERVICE_APP.updateBorrowerServiceIdInfo",borrowerServices);
    }

    /**
     *   更新客户信息
     * @param customerBasicInfo
     */
    @Override
    public void updateCutomerIdInfo(CustomerBasicInfo customerBasicInfo) {
        baseDao.update("RL_BORROWER_SERVICE_APP.updateCutomerIdInfo",customerBasicInfo);
    }

    /**
     *         批量 更新客户信息
     * @param customerBasicInfoList
     */
    @Override
    public void updateCutomerIdListInfo(List<CustomerBasicInfo> customerBasicInfoList) {
        baseDao.batchUpdate("RL_BORROWER_SERVICE_APP.updateCutomerIdInfo",customerBasicInfoList);
    }

    /**
     *  更新共借人信息
     * @param creditCoBorrower
     */
    @Override
    public void updateCreditCoBorrowerIdInfo(CreditCoBorrower creditCoBorrower) {
        baseDao.update("RL_BORROWER_SERVICE_APP.updateCreditCoBorrowerIdInfo",creditCoBorrower);
    }
}