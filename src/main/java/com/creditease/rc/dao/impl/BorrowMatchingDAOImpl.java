package com.creditease.rc.dao.impl;

import java.util.Date;
import java.util.HashMap;
import java.util.List;

import org.springframework.stereotype.Repository;

import com.creditease.rc.dao.BorrowMatchingDAO;
import com.creditease.rc.domain.BorrowMatching;
import com.creditease.rc.domain.TradeDealForm;
import com.creditease.rc.framework.dao.impl.BaseDao;
@Repository
public class BorrowMatchingDAOImpl extends BaseDao implements BorrowMatchingDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_BORROW_MATCHING
     *
     * @abatorgenerated
     */
    public BorrowMatchingDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_BORROW_MATCHING
     *
     * @abatorgenerated
     */
    public Long insert(BorrowMatching record) {
        Object newKey = getSqlMapClientTemplate().insert("RL_BORROW_MATCHING.abatorgenerated_insert", record);
        return (Long) newKey;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_BORROW_MATCHING
     *
     * @abatorgenerated
     */
    public int updateByPrimaryKey(BorrowMatching record) {
        int rows = getSqlMapClientTemplate().update("RL_BORROW_MATCHING.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_BORROW_MATCHING
     *
     * @abatorgenerated
     */
    public int updateByPrimaryKeySelective(BorrowMatching record) {
        int rows = getSqlMapClientTemplate().update("RL_BORROW_MATCHING.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_BORROW_MATCHING
     *
     * @abatorgenerated
     */
    public BorrowMatching selectByPrimaryKey(Long borrowmatchingid) {
        BorrowMatching key = new BorrowMatching();
        key.setBorrowmatchingid(borrowmatchingid);
        BorrowMatching record = (BorrowMatching) getSqlMapClientTemplate().queryForObject("RL_BORROW_MATCHING.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_BORROW_MATCHING
     *
     * @abatorgenerated
     */
    public int deleteByPrimaryKey(Long borrowmatchingid) {
        BorrowMatching key = new BorrowMatching();
        key.setBorrowmatchingid(borrowmatchingid);
        int rows = getSqlMapClientTemplate().delete("RL_BORROW_MATCHING.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

	@Override
	public HashMap<String, String> selectMatchidByCreditapplicationId(
			Long creditapplicationId) {
		return (HashMap<String, String>) queryUnique("RL_BORROW_MATCHING.selectMatchidByCreditapplicationId", creditapplicationId);
		
	}

	@Override
	public String selectStatusbyCreditapplicationId(Long creditapplicationId) {
		return (String) queryUnique("RL_BORROW_MATCHING.selectStatusbyCreditapplicationId", creditapplicationId);
	}

	@Override
	public List<Long> selectNotUpload(Date newDate) {
		return (List<Long>) queryList("CREDITAPPLICATION.selectNotUpload", newDate);
	}

	@Override
	public int updateByCaId(BorrowMatching record) {
		return update("RL_BORROW_MATCHING.updateByCaId", record);
	}

}