package com.creditease.rc.dao.impl;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.creditease.rc.domain.CodeTable;
import com.creditease.rc.domain.ConsultPoolLog;
import com.creditease.rc.domain.ConsultPoolLogDetail;
import com.creditease.rc.domain.CustomerConsult;
import com.creditease.rc.framework.dao.impl.BaseDao;
import com.creditease.rc.vo.DataDictionaryVo;
import org.springframework.stereotype.Repository;

import com.creditease.rc.dao.ICustomerConsultPoolDao;
import com.creditease.rc.domain.CustomerConsultPool;
import com.creditease.rc.framework.dao.IBaseDao;
import com.creditease.rc.framework.pager.Pagination;
import com.creditease.rc.vo.CustomerConsultPoolVo;

import javax.annotation.Resource;

@Repository
public class CustomerConsultPoolDAO extends BaseDao implements ICustomerConsultPoolDao {

	@Resource
	private BaseDao baseDao;

	String ns = "CUSTOMERCONSULTPOOL.";

	public CustomerConsultPoolDAO() {
		super();
	}

	/**
	 * baseDao method was generated by Abator for iBATIS. baseDao method corresponds
	 * to the database table CUSTOMERCONSULTPOOL
	 * 
	 * @abatorgenerated
	 */
	public Long insert(CustomerConsultPool record) {
		Object newKey = baseDao.insertObject("CUSTOMERCONSULTPOOL.insertMarketConsultPool", record);
		return (Long) newKey;
	}

	/**
	 * baseDao method was generated by Abator for iBATIS. baseDao method corresponds
	 * to the database table CUSTOMERCONSULTPOOL
	 * 
	 * @abatorgenerated
	 */
	public int updateByPrimaryKey(CustomerConsultPool record) {
		int rows = baseDao.update("CUSTOMERCONSULTPOOL.abatorgenerated_updateByPrimaryKey", record);
		return rows;
	}

	public int updateByPrimaryKey_(CustomerConsultPool record) {
		int rows = baseDao.update("CUSTOMERCONSULTPOOL.abatorgenerated_updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * baseDao method was generated by Abator for iBATIS. baseDao method corresponds
	 * to the database table CUSTOMERCONSULTPOOL
	 * 
	 * @abatorgenerated
	 */
	public int updateByPrimaryKeySelective(CustomerConsultPool record) {
		int rows = baseDao.update("CUSTOMERCONSULTPOOL.updateByPrimaryKeySelective", record);
		return rows;
	}

	public int updateOperationFlag(CustomerConsultPool record) {
		int rows = baseDao.update("CUSTOMERCONSULTPOOL.updateOperationFlag", record);
		return rows;
	}

	/**
	 * baseDao method was generated by Abator for iBATIS. baseDao method corresponds
	 * to the database table CUSTOMERCONSULTPOOL
	 * 
	 * @abatorgenerated
	 */
	public int updateByPrimaryKeyEdit(CustomerConsultPool record) {
		int rows = baseDao.update("CUSTOMERCONSULTPOOL.updateByPrimaryKeyZw", record);
		return rows;
	}

	/**
	 * baseDao method was generated by Abator for iBATIS. baseDao method corresponds
	 * to the database table CUSTOMERCONSULTPOOL
	 * 
	 * @abatorgenerated
	 */
	public CustomerConsultPool selectByPrimaryKey(Long consultPoolId) {
		CustomerConsultPool key = new CustomerConsultPool();
		key.setConsultPoolId(consultPoolId);
		CustomerConsultPool record = (CustomerConsultPool) baseDao.queryUnique(
				"CUSTOMERCONSULTPOOL.selectByPrimaryKeyZw", key);
		return record;
	}

	/**
	 * baseDao method was generated by Abator for iBATIS. baseDao method corresponds
	 * to the database table CUSTOMERCONSULTPOOL
	 * 
	 * @abatorgenerated
	 */
	public int deleteByPrimaryKey(Long consultPoolId) {
		CustomerConsultPool key = new CustomerConsultPool();
		key.setConsultPoolId(consultPoolId);
		int rows = baseDao.delete("CUSTOMERCONSULTPOOL.abatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	// 批量导入
	@Override
	public void batchInsert(List entityList) {

		baseDao.batchInsert(ns + "abatorgenerated_insertZw", entityList);
	}

	@Override
	public Pagination selectInquirePoolOfficeList(Pagination pagination, Map<String, String> map) {
		return baseDao.queryForPaginatedList("CUSTOMERCONSULTPOOL.selectList", "CUSTOMERCONSULTPOOL.selectCount", map,
				pagination.getStartResult(), pagination.getPageSize());
	}

	// 导出数据
	@Override
	public Pagination downloadExcel(Pagination pagination, Map<String, Object> map) {
		return baseDao.queryForPaginatedList("CUSTOMERCONSULTPOOL.selectList", "CUSTOMERCONSULTPOOL.selectCount", map,
				0, 0);
	}

	@Override
	public CustomerConsultPoolVo registerInquireView(CustomerConsultPoolVo customerConsultPoolVo) {
		return (CustomerConsultPoolVo) baseDao.queryUnique("CUSTOMERCONSULTPOOL.selectCustomerConsultPoolVo",
				customerConsultPoolVo);
	}

	/**
	 * @author luohongjie
	 *         更新受理咨询状态为 "待退回确认"
	 */
	@Override
	public int updateMarkingConsultStatus(Long consultPoolId) {
		int rows = baseDao.update("CUSTOMERCONSULTPOOL.updateAcceptConsultState", consultPoolId);
		return rows;
	}

	/**
	 * @author luohongjie
	 *         跟新营销咨询状态为 "已退回"
	 */
	@Override
	public int updateMarkingConsultStatusConfirm(Long consultPoolId) {
		int rows = baseDao.update("CUSTOMERCONSULTPOOL.updateMarkintStatus", consultPoolId);
		return rows;
	}

	@Override
	public CustomerConsultPool showAcceptAdvice(Long consultPoolId) {
		CustomerConsultPool key = new CustomerConsultPool();
		key.setConsultPoolId(consultPoolId);
		CustomerConsultPool record = (CustomerConsultPool) baseDao.queryUnique(
				"CUSTOMERCONSULTPOOL.showAcceptAdviceInfo", key);
		return record;
	}

	/**
	 * 
	 * @author 韩大年
	 * @Description: 批量更新
	 * @param customerConsultPoolList
	 * @return
	 * @version v1.0 2014-2-20
	 */
	public Integer batchUpdate(List<CustomerConsultPool> customerConsultPoolList) {
		baseDao.batchUpdate("CUSTOMERCONSULTPOOL.abatorgenerated_updateByPrimaryKeySelective", customerConsultPoolList);
		return customerConsultPoolList.size();
	}

	/**
	 * 
	 * @author 韩大年
	 * @Description: 查询无城市网点的所有咨询池数据
	 * @return
	 * @version v1.0 2014-2-20
	 */
	public List<CustomerConsultPool> selectConsultPoolByNoTeamDepartmentId() {
		return (List<CustomerConsultPool>) baseDao
				.queryList("CUSTOMERCONSULTPOOL.selectConsultPoolByNoTeamDepartmentId");
	}

	/**
	 * 
	 * @author 韩大年
	 * @Description: 咨询池中 选择了“区/县”
	 * @return
	 * @version v1.0 2014-2-20
	 */
	public List<CustomerConsultPool> selectByAreaIsNotNull(String area) {
		return (List<CustomerConsultPool>) baseDao.queryList("CUSTOMERCONSULTPOOL.selectByAreaIsNotNull", area);
	}

	/**
	 * 
	 * @author 韩大年
	 * @Description: 没有选择“区/县”，选择城市
	 * @return
	 * @version v1.0 2014-2-20
	 */
	public List<CustomerConsultPool> selectByCityIsNotNull(String city) {
		return (List<CustomerConsultPool>) baseDao.queryList("CUSTOMERCONSULTPOOL.selectByCityIsNotNull", city);
	}

	@Override
	public CustomerConsultPool selectByForeignKey(Long customerConsultId) {
		CustomerConsultPool key = new CustomerConsultPool();
		key.setCustomerConsultId(customerConsultId);
		CustomerConsultPool record = (CustomerConsultPool) baseDao.queryUnique(
				"CUSTOMERCONSULTPOOL.selectByForeignKey", key);
		return record;
	}

	/**
	 * 
	 * @author 韩大年
	 * @Description: 根据区县进行分组
	 * @return
	 * @version v1.0 2014-2-25
	 */
	public List<String> selectGroupByArea() {
		return (List<String>) baseDao.queryList("CUSTOMERCONSULTPOOL.selectGroupByArea");
	}

	/**
	 * 
	 * @author 韩大年
	 * @Description: 根据城市进行分组
	 * @return
	 * @version v1.0 2014-2-25
	 */
	public List<String> selectGroupByCity() {
		return (List<String>) baseDao.queryList("CUSTOMERCONSULTPOOL.selectGroupByCity");
	}

	public String selectValueByStatus(Map recond) {
		return (String) baseDao.queryUnique("CUSTOMERCONSULTPOOL.selectValueByStatus", recond);
	}

	@Override
	public List<String> selectMoilePhonebyDate() {

		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

		Date date = new Date();
		String serviceTime = dateFormat.format(date);

		return (List<String>) baseDao.queryList("CUSTOMERCONSULTPOOL.selectMoilePhonebyDate", serviceTime);
	}

	/**
	 * 更新营销咨询为已废弃
	 */
	public int updateScrapFlagByPrimarykey(Long consultPoolId) {
		int rows = baseDao.update("CUSTOMERCONSULTPOOL.updateScrapFlag", consultPoolId);
		return rows;
	}

	@Override
	public Pagination searchSaleInquireInfo(Map searchValue, Pagination pagination) {
		// TODO Auto-generated method stub
		return queryForPaginatedList("CUSTOMERCONSULTPOOL.SelectPagnationListZw",
				"CUSTOMERCONSULTPOOL.SelectPagnationListCountZw", searchValue, pagination.getStartResult(),
				pagination.getPageSize());
	}

	@Override
	public Pagination selectDetailByPhoneOrId(Map searchValue, Pagination pagination) {
		// TODO Auto-generated method stub
		return queryForPaginatedList("CUSTOMERCONSULTPOOL.selectDetailZw", "CUSTOMERCONSULTPOOL.selectDetailCountZw",
				searchValue, pagination.getStartResult(), pagination.getPageSize());
	}

	@Override
	public List selectTeamDepartment(Long long1) {
		// TODO Auto-generated method stub
		return baseDao.queryList("CUSTOMERCONSULTPOOL.selectDepartmentInfoById", long1);
	}

	@Override
	public List<String> selectDistributeCity(String distributeDepartmentId) {
		// TODO Auto-generated method stub
		return (List<String>) baseDao.queryList("CUSTOMERCONSULTPOOL.selectDistributeCity", distributeDepartmentId);
	}

	@Override
	public List<String> selectTeamDepartmentId(String distributeDepartmentId) {
		// TODO Auto-generated method stub
		return (List<String>) baseDao.queryList("CUSTOMERCONSULTPOOL.selectTeamDepartmentId", distributeDepartmentId);
	}

	@Override
	public CustomerConsultPool selectByPrimaryKey(CustomerConsultPool ccp) {
		// TODO Auto-generated method stub
		return (CustomerConsultPool) baseDao.queryUnique("CUSTOMERCONSULTPOOL.abatorgenerated_selectByPrimaryKey", ccp);
	}

	@Override
	public List<CustomerConsultPool> queryCustomerConsultPoolNeedDistribute() {
		// TODO Auto-generated method stub
		return (List<CustomerConsultPool>) baseDao
				.queryList("CUSTOMERCONSULTPOOL.queryCustomerConsultPoolNeedDistribute");
	}

	@Override
	public List<Map<String, String>> queryDepartmentIdandCountMap(String queryDepartmentIdsString) {
		// TODO Auto-generated method stub
		return (List<Map<String, String>>) baseDao.queryList("CUSTOMERCONSULTPOOL.queryDepartmentIdandCountMap",
				queryDepartmentIdsString);
	}

	@Override
	public boolean updateOperationFlag(Set<String> phoneSet) {
		// TODO Auto-generated method stub
		List<String> phoneList = new ArrayList<String>(phoneSet);
		baseDao.batchUpdate("CUSTOMERCONSULTPOOL.updateOperationFlagByPhone", phoneList);
		return true;
	}

	// 查看跟一个电话号码有关的所有用户信息
	@Override
	public List<CustomerConsultPoolVo> selectHistory(String telphone) {

		return (List<CustomerConsultPoolVo>) baseDao.queryList("CUSTOMERCONSULTPOOL.selectHistoryByTelPhone", telphone);
	}

	@Override
	public List<CodeTable> getCodeTableBySection(DataDictionaryVo dictionaryVo) {
		List<CodeTable> codeTables = new ArrayList<CodeTable>();
		if (dictionaryVo != null) {
			codeTables = (List<CodeTable>) queryList("codeTable.selectBySectionZw", dictionaryVo);
		}
		return codeTables;
	}

	@Override
	public int updateAcceptConsultStatusCancel(Long consultPoolId) {
		int rows = baseDao.update("CUSTOMERCONSULTPOOL.updateAcceptConsultStatusCancel", consultPoolId);
		return rows;
	}

	@Override
	public boolean updateCustomerConsultPoolForAutoDistribute(List<CustomerConsultPool> customerConsultPoolsForUpdate) {
		// TODO Auto-generated method stub
		baseDao.batchUpdate("CUSTOMERCONSULTPOOL.abatorgenerated_updateByPrimaryKeySelective",
				customerConsultPoolsForUpdate);
		return true;
	}

	@Override
	public void saveConsultPoolLog(List<? extends Object> list) {
		if (!list.isEmpty()) {
			if (list.get(0) instanceof ConsultPoolLog) {
				baseDao.batchInsert("CUSTOMERCONSULTPOOL.insertConsultPoolLog", list);
			} else if (list.get(0) instanceof ConsultPoolLogDetail) {
				baseDao.batchInsert("CUSTOMERCONSULTPOOL.insertConsultPoolLogDetail", list);
			}
		}
	}

	@Override
	public List<CustomerConsultPool> queryCustomerConsultPoolListByConsultPoolIds(String consultPoolIdString) {
		// TODO Auto-generated method stub
		return (List<CustomerConsultPool>) baseDao.queryList(
				"CUSTOMERCONSULTPOOL.queryCustomerConsultPoolListByConsultPoolIds", consultPoolIdString);
	}

	@Override
	public boolean updateCustomerConsultPoolByListForDistributeOrders(
			List<CustomerConsultPool> customerConsultPoolsForUpdate) {
		// TODO Auto-generated method stub
		baseDao.batchUpdate("CUSTOMERCONSULTPOOL.updateCustomerConsultPoolByListForDistributeOrders",
				customerConsultPoolsForUpdate);
		return true;
	}

	@Override
	public boolean updateComponentOperationFlagByPhone(Set<String> phoneSet) {
		// TODO Auto-generated method stub
		List<String> phoneList = new ArrayList<String>(phoneSet);
		baseDao.batchUpdate("CUSTOMERCONSULTPOOL.updateComponentOperationFlagByPhone", phoneList);
		return true;
	}

	@Override
	public boolean insertConsultPoolLog(ConsultPoolLog consultPoolLog) {
		baseDao.insert("CUSTOMERCONSULTPOOL.insertConsultPoolLog", consultPoolLog);
		return true;

	}

	@Override
	public boolean insertConsultPoolLogDetail(List<ConsultPoolLogDetail> consultPoolLogDetails) {
		// TODO Auto-generated method stub
		baseDao.batchInsert("CUSTOMERCONSULTPOOL.insertConsultPoolLogDetail", consultPoolLogDetails);
		return true;
	}

	@Override
	public CustomerConsultPool selectCustomerConsultPool(CustomerConsultPool customerConsultPool) {
		return (CustomerConsultPool) queryUnique("CUSTOMERCONSULTPOOL.selectCustomerConsultPool", customerConsultPool);
	}

	@Override
	public List<CustomerConsultPool> queryCustomerConsultPoolByBorrowerServiceAppId(Integer borrowerServiceAppId) {
		// TODO Auto-generated method stub
		return (List<CustomerConsultPool>) baseDao.queryList(
				"CUSTOMERCONSULTPOOL.queryCustomerConsultPoolByBorrowerServiceAppId", borrowerServiceAppId);
	}

	@Override
	public List<CustomerConsultPool> queryCustomerConsultPoolByCreditapplicationId(Long creditapplicationId) {
		// TODO Auto-generated method stub
		return (List<CustomerConsultPool>) baseDao.queryList(
				"CUSTOMERCONSULTPOOL.queryCustomerConsultPoolByCreditapplicationId", creditapplicationId);
	}

	@Override
	public boolean updateAcceptConsultStateByCreditApplicationId(Integer creditApplicationId) {
		// TODO Auto-generated method stub
		baseDao.update("CUSTOMERCONSULTPOOL.updateAcceptConsultStateByCreditApplicationId", creditApplicationId);
		return true;
	}
}
