package com.creditease.rc.dao.impl;

import java.util.List;

import org.springframework.stereotype.Repository;

import com.creditease.rc.dao.IOperateLogDAO;
import com.creditease.rc.domain.OperateLog;
import com.creditease.rc.framework.dao.impl.BaseDao;
import com.creditease.rc.framework.pager.Pagination;
import com.creditease.rc.util.CommonUtil;
import com.creditease.rc.vo.OperateLogVO;

@Repository
public class OperateLogDAO extends BaseDao implements IOperateLogDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table RL_OPERATE_LOG
     *
     * @abatorgenerated
     */
    public OperateLogDAO() {
    }

    /**
	 * 
	 * @author 韩大年  
	 * @Description:  日志插入
	 * @param operateLog
	 * @return 
	 * @version v1.0 
	 * 2013-3-11
	 */
    public Long insert(OperateLog operateLog) {
    	return (Long) this.insertObject("rl_operate_log.abatorgenerated_insert", operateLog);
    }
    
    /**
     * 
     * @author 韩大年  
     * @Description:  日志查询
     * @param operateLogVO
     * @param pagination
     * @return 
     * @version v1.0 
     * 2013-3-12
     */
    public Pagination selectOperateLogByPagination(OperateLogVO operateLogVO,Pagination pagination) {
		return this.queryForPaginatedList("rl_operate_log.selectOperateLogByPagination", "rl_operate_log.countByPage",
				operateLogVO, pagination.getStartResult(), pagination.getPageSize());
	}

    /**
     * 
     * @author 韩大年  
     * @Description:  批量插入日志方法
     * @param oList 
     * @version v1.0 
     * 2013-3-13
     */
	@Override
	public void batchInsert(List<OperateLog> operateLogList) {
		this.batchInsert("rl_operate_log.abatorgenerated_insert", operateLogList);
		
	}

	@Override
	public Pagination queryOperateLogByCreditId(String creditAppId,
			Pagination pagination) {
		Long creditApplicationId = null;
		if(CommonUtil.isNotEmpty(creditAppId)){
			creditApplicationId = Long.valueOf(creditAppId);
		}
		OperateLog operateLog = new OperateLog();
		operateLog.setCreditapplicationId(creditApplicationId);
		return this.queryForPaginatedList("rl_operate_log.selectByCreditId", "rl_operate_log.countByPageCreditId",
				operateLog, pagination.getStartResult(), pagination.getPageSize());
	}
}