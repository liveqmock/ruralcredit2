package com.creditease.rc.app.sia.vo;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BorrowerContactWayExample {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table ICP_BORROWER_CONTACT_WAY
	 * @abatorgenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table ICP_BORROWER_CONTACT_WAY
	 * @abatorgenerated
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table ICP_BORROWER_CONTACT_WAY
	 * @abatorgenerated
	 */
	public BorrowerContactWayExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table ICP_BORROWER_CONTACT_WAY
	 * @abatorgenerated
	 */
	protected BorrowerContactWayExample(BorrowerContactWayExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table ICP_BORROWER_CONTACT_WAY
	 * @abatorgenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table ICP_BORROWER_CONTACT_WAY
	 * @abatorgenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table ICP_BORROWER_CONTACT_WAY
	 * @abatorgenerated
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table ICP_BORROWER_CONTACT_WAY
	 * @abatorgenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table ICP_BORROWER_CONTACT_WAY
	 * @abatorgenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table ICP_BORROWER_CONTACT_WAY
	 * @abatorgenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table ICP_BORROWER_CONTACT_WAY
	 * @abatorgenerated
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table ICP_BORROWER_CONTACT_WAY
	 * @abatorgenerated
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andBorrowerInfoIdIsNull() {
			addCriterion("BORROWER_INFO_ID is null");
			return this;
		}

		public Criteria andBorrowerInfoIdIsNotNull() {
			addCriterion("BORROWER_INFO_ID is not null");
			return this;
		}

		public Criteria andBorrowerInfoIdEqualTo(Long value) {
			addCriterion("BORROWER_INFO_ID =", value, "borrowerInfoId");
			return this;
		}

		public Criteria andBorrowerInfoIdNotEqualTo(Long value) {
			addCriterion("BORROWER_INFO_ID <>", value, "borrowerInfoId");
			return this;
		}

		public Criteria andBorrowerInfoIdGreaterThan(Long value) {
			addCriterion("BORROWER_INFO_ID >", value, "borrowerInfoId");
			return this;
		}

		public Criteria andBorrowerInfoIdGreaterThanOrEqualTo(Long value) {
			addCriterion("BORROWER_INFO_ID >=", value, "borrowerInfoId");
			return this;
		}

		public Criteria andBorrowerInfoIdLessThan(Long value) {
			addCriterion("BORROWER_INFO_ID <", value, "borrowerInfoId");
			return this;
		}

		public Criteria andBorrowerInfoIdLessThanOrEqualTo(Long value) {
			addCriterion("BORROWER_INFO_ID <=", value, "borrowerInfoId");
			return this;
		}

		public Criteria andBorrowerInfoIdIn(List values) {
			addCriterion("BORROWER_INFO_ID in", values, "borrowerInfoId");
			return this;
		}

		public Criteria andBorrowerInfoIdNotIn(List values) {
			addCriterion("BORROWER_INFO_ID not in", values, "borrowerInfoId");
			return this;
		}

		public Criteria andBorrowerInfoIdBetween(Long value1, Long value2) {
			addCriterion("BORROWER_INFO_ID between", value1, value2,
					"borrowerInfoId");
			return this;
		}

		public Criteria andBorrowerInfoIdNotBetween(Long value1, Long value2) {
			addCriterion("BORROWER_INFO_ID not between", value1, value2,
					"borrowerInfoId");
			return this;
		}

		public Criteria andContactWayIdIsNull() {
			addCriterion("CONTACT_WAY_ID is null");
			return this;
		}

		public Criteria andContactWayIdIsNotNull() {
			addCriterion("CONTACT_WAY_ID is not null");
			return this;
		}

		public Criteria andContactWayIdEqualTo(Long value) {
			addCriterion("CONTACT_WAY_ID =", value, "contactWayId");
			return this;
		}

		public Criteria andContactWayIdNotEqualTo(Long value) {
			addCriterion("CONTACT_WAY_ID <>", value, "contactWayId");
			return this;
		}

		public Criteria andContactWayIdGreaterThan(Long value) {
			addCriterion("CONTACT_WAY_ID >", value, "contactWayId");
			return this;
		}

		public Criteria andContactWayIdGreaterThanOrEqualTo(Long value) {
			addCriterion("CONTACT_WAY_ID >=", value, "contactWayId");
			return this;
		}

		public Criteria andContactWayIdLessThan(Long value) {
			addCriterion("CONTACT_WAY_ID <", value, "contactWayId");
			return this;
		}

		public Criteria andContactWayIdLessThanOrEqualTo(Long value) {
			addCriterion("CONTACT_WAY_ID <=", value, "contactWayId");
			return this;
		}

		public Criteria andContactWayIdIn(List values) {
			addCriterion("CONTACT_WAY_ID in", values, "contactWayId");
			return this;
		}

		public Criteria andContactWayIdNotIn(List values) {
			addCriterion("CONTACT_WAY_ID not in", values, "contactWayId");
			return this;
		}

		public Criteria andContactWayIdBetween(Long value1, Long value2) {
			addCriterion("CONTACT_WAY_ID between", value1, value2,
					"contactWayId");
			return this;
		}

		public Criteria andContactWayIdNotBetween(Long value1, Long value2) {
			addCriterion("CONTACT_WAY_ID not between", value1, value2,
					"contactWayId");
			return this;
		}

		public Criteria andContactWayIsNull() {
			addCriterion("CONTACT_WAY is null");
			return this;
		}

		public Criteria andContactWayIsNotNull() {
			addCriterion("CONTACT_WAY is not null");
			return this;
		}

		public Criteria andContactWayEqualTo(String value) {
			addCriterion("CONTACT_WAY =", value, "contactWay");
			return this;
		}

		public Criteria andContactWayNotEqualTo(String value) {
			addCriterion("CONTACT_WAY <>", value, "contactWay");
			return this;
		}

		public Criteria andContactWayGreaterThan(String value) {
			addCriterion("CONTACT_WAY >", value, "contactWay");
			return this;
		}

		public Criteria andContactWayGreaterThanOrEqualTo(String value) {
			addCriterion("CONTACT_WAY >=", value, "contactWay");
			return this;
		}

		public Criteria andContactWayLessThan(String value) {
			addCriterion("CONTACT_WAY <", value, "contactWay");
			return this;
		}

		public Criteria andContactWayLessThanOrEqualTo(String value) {
			addCriterion("CONTACT_WAY <=", value, "contactWay");
			return this;
		}

		public Criteria andContactWayLike(String value) {
			addCriterion("CONTACT_WAY like", value, "contactWay");
			return this;
		}

		public Criteria andContactWayNotLike(String value) {
			addCriterion("CONTACT_WAY not like", value, "contactWay");
			return this;
		}

		public Criteria andContactWayIn(List values) {
			addCriterion("CONTACT_WAY in", values, "contactWay");
			return this;
		}

		public Criteria andContactWayNotIn(List values) {
			addCriterion("CONTACT_WAY not in", values, "contactWay");
			return this;
		}

		public Criteria andContactWayBetween(String value1, String value2) {
			addCriterion("CONTACT_WAY between", value1, value2, "contactWay");
			return this;
		}

		public Criteria andContactWayNotBetween(String value1, String value2) {
			addCriterion("CONTACT_WAY not between", value1, value2,
					"contactWay");
			return this;
		}

		public Criteria andContactValueIsNull() {
			addCriterion("CONTACT_VALUE is null");
			return this;
		}

		public Criteria andContactValueIsNotNull() {
			addCriterion("CONTACT_VALUE is not null");
			return this;
		}

		public Criteria andContactValueEqualTo(String value) {
			addCriterion("CONTACT_VALUE =", value, "contactValue");
			return this;
		}

		public Criteria andContactValueNotEqualTo(String value) {
			addCriterion("CONTACT_VALUE <>", value, "contactValue");
			return this;
		}

		public Criteria andContactValueGreaterThan(String value) {
			addCriterion("CONTACT_VALUE >", value, "contactValue");
			return this;
		}

		public Criteria andContactValueGreaterThanOrEqualTo(String value) {
			addCriterion("CONTACT_VALUE >=", value, "contactValue");
			return this;
		}

		public Criteria andContactValueLessThan(String value) {
			addCriterion("CONTACT_VALUE <", value, "contactValue");
			return this;
		}

		public Criteria andContactValueLessThanOrEqualTo(String value) {
			addCriterion("CONTACT_VALUE <=", value, "contactValue");
			return this;
		}

		public Criteria andContactValueLike(String value) {
			addCriterion("CONTACT_VALUE like", value, "contactValue");
			return this;
		}

		public Criteria andContactValueNotLike(String value) {
			addCriterion("CONTACT_VALUE not like", value, "contactValue");
			return this;
		}

		public Criteria andContactValueIn(List values) {
			addCriterion("CONTACT_VALUE in", values, "contactValue");
			return this;
		}

		public Criteria andContactValueNotIn(List values) {
			addCriterion("CONTACT_VALUE not in", values, "contactValue");
			return this;
		}

		public Criteria andContactValueBetween(String value1, String value2) {
			addCriterion("CONTACT_VALUE between", value1, value2,
					"contactValue");
			return this;
		}

		public Criteria andContactValueNotBetween(String value1, String value2) {
			addCriterion("CONTACT_VALUE not between", value1, value2,
					"contactValue");
			return this;
		}

		public Criteria andPhoneAreaIsNull() {
			addCriterion("PHONE_AREA is null");
			return this;
		}

		public Criteria andPhoneAreaIsNotNull() {
			addCriterion("PHONE_AREA is not null");
			return this;
		}

		public Criteria andPhoneAreaEqualTo(String value) {
			addCriterion("PHONE_AREA =", value, "phoneArea");
			return this;
		}

		public Criteria andPhoneAreaNotEqualTo(String value) {
			addCriterion("PHONE_AREA <>", value, "phoneArea");
			return this;
		}

		public Criteria andPhoneAreaGreaterThan(String value) {
			addCriterion("PHONE_AREA >", value, "phoneArea");
			return this;
		}

		public Criteria andPhoneAreaGreaterThanOrEqualTo(String value) {
			addCriterion("PHONE_AREA >=", value, "phoneArea");
			return this;
		}

		public Criteria andPhoneAreaLessThan(String value) {
			addCriterion("PHONE_AREA <", value, "phoneArea");
			return this;
		}

		public Criteria andPhoneAreaLessThanOrEqualTo(String value) {
			addCriterion("PHONE_AREA <=", value, "phoneArea");
			return this;
		}

		public Criteria andPhoneAreaLike(String value) {
			addCriterion("PHONE_AREA like", value, "phoneArea");
			return this;
		}

		public Criteria andPhoneAreaNotLike(String value) {
			addCriterion("PHONE_AREA not like", value, "phoneArea");
			return this;
		}

		public Criteria andPhoneAreaIn(List values) {
			addCriterion("PHONE_AREA in", values, "phoneArea");
			return this;
		}

		public Criteria andPhoneAreaNotIn(List values) {
			addCriterion("PHONE_AREA not in", values, "phoneArea");
			return this;
		}

		public Criteria andPhoneAreaBetween(String value1, String value2) {
			addCriterion("PHONE_AREA between", value1, value2, "phoneArea");
			return this;
		}

		public Criteria andPhoneAreaNotBetween(String value1, String value2) {
			addCriterion("PHONE_AREA not between", value1, value2, "phoneArea");
			return this;
		}
	}
}